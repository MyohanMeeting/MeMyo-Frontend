import { configureStore } from '@reduxjs/toolkit'
import localStorage from 'redux-persist/es/storage';
import rootReducer from './reducer';
import {
    persistReducer,
    persistStore,
    FLUSH,
    REHYDRATE,
    PAUSE,
    PERSIST,
    PURGE,
    REGISTER
} from 'redux-persist';



// ÏûëÏóÖÏ§ë.. üë©‚Äçüé§
// const adoptFormStateReconciler = <AdoptState>(inboundState:any, originalState:AdoptState, reducedState:AdoptState) => {
//   // inboundState: Î°úÏª¨ Ïä§ÌÜ†Î¶¨ÏßÄÏóêÏÑú Í∞ÄÏ†∏Ïò® ÏÉÅÌÉú
//   // originalState: ÌòÑÏû¨ Ïä§ÌÜ†Ïñ¥Ïùò ÏõêÎûò ÏÉÅÌÉú
//   // reducedState: ÌòÑÏû¨ Ïä§ÌÜ†Ïñ¥Ïùò Î¶¨ÎìÄÏÑúÎ°ú Ï≤òÎ¶¨Îêú ÏÉÅÌÉú

//   // 'adopt' ÌÇ§Ïóê Ìï¥ÎãπÌïòÎäî ÏÉÅÌÉúÎßå Î°úÏª¨ Ïä§ÌÜ†Î¶¨ÏßÄÏóêÏÑú Í∞ÄÏ†∏ÏòµÎãàÎã§.
// console.log('reducer',reducedState)
  
//   const adoptFormState = inboundState && inboundState.adoptForm ? inboundState.adoptForm : {};

//   // Î¶¨ÎçïÏä§ ÏÉÅÌÉúÎ•º Ï°∞Ìï©ÌïòÏó¨ ÏµúÏ¢Ö ÏÉÅÌÉúÎ•º Î∞òÌôòÌï©ÎãàÎã§.
//   return {
//     ...reducedState, // Îã§Î•∏ ÏÉÅÌÉúÎäî Í∑∏ÎåÄÎ°ú Ïú†ÏßÄ
//       adopt: adoptFormState, // adoptForm ÏÉÅÌÉúÎßå ÎçÆÏñ¥Ïì∞Í∏∞
//   };
// };


const persistConfig = {
    key: "adopt-regist",
    storage: localStorage,
    whitelist:['adopt']
}

const persistedReducer = persistReducer(persistConfig, rootReducer);

export const store = configureStore({
    reducer: persistedReducer,
    middleware: (getDefaultMiddleware) => {
        const defaultMiddleware = getDefaultMiddleware({
            serializableCheck: {
                ignoredActions: [
                    FLUSH,
                    REHYDRATE,
                    PAUSE,
                    PERSIST,
                    PURGE,
                    REGISTER
                ]
            }
        });
        return [...defaultMiddleware];
    }    
})




export type RootState = ReturnType<typeof store.getState>;


export type AppDispatch = typeof store.dispatch;

export const persistor = persistStore(store);
export default store;